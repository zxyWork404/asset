# ===================================
#  springboot配置文件
# ===================================
spring.application.name=asset-admin-messages
server.port=10088
spring.main.allow-bean-definition-overriding=true
#logging.level.root:warn
#logging.level.com.zaxxer.hikari:trace

# ===================================
#  druid配置文件
# ===================================
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/asset-admin?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=zhangxiangyu
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,slf4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.useGlobalDataSourceStat=true
#配置监控页面访问登录名称
spring.datasource.druid.stat-view-servlet.login-username=admin
#配置监控页面访问密码
spring.datasource.druid.stat-view-servlet.login-password=admin
#是否开启慢sql查询监控
spring.datasource.druid.filter.stat.log-slow-sql=true
#慢SQL执行时间
spring.datasource.druid.filter.stat.slow-sql-millis=1
#mapper.xml文件放置的位置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.message.receive.mapper


# ===================================
# 小程序推送模版
# ===================================
spring.template.url=https://api.weixin.qq.com/cgi-bin/message/subscribe/send?access_token=
spring.template.id=jDkVY0bUUEIbAdeLwBY1XBG81wjKfnSpwoXHrt09N-U

#spring.template.appid=wx7c54942dfc87f4d8
#spring.template.appsecret=5873a729c365b65ab42bb5fc82d2ed49
spring.template.appid=wx387f2dd400f31535
spring.template.appsecret=d2aa250bdf9c2b75ee265076070ff5d7
spring.template.path=pages/index/index

# ===================================
#  kafka配置文件
# ===================================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=81.70.243.115:9092
spring.kafka.template.default-topic=topic_messages
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.listener.concurrency=3
spring.kafka.properties.linger.ms=1


#=============== consumer  =======================
spring.kafka.consumer.client-id=${spring.application.name}
# 指定默认消费者group id --> 由于在kafka中，同一组中的consumer不会读取到同一个消息，依靠groud.id设置组名
spring.kafka.consumer.group-id=sms-messages
# smallest和largest才有效，如果smallest重新0开始读取，如果是largest从logfile的offset读取。一般情况下我们都是设置smalles
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
# 如果"enable.auto.commit"为true，则消费者偏移自动提交给Kafka的频率（以毫秒为单位），默认值为5000。
spring.kafka.consumer.auto-commit-interval=100
spring.kafka.consumer.max-poll-records=10
# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# ===================================
#  redis配置文件
# ===================================
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.timeout=10000ms
spring.redis.password=
spring.redis.lettuce.pool.max-active=10
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-idle=10
spring.redis.lettuce.pool.max-wait=30000ms