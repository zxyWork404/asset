<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.asset.examine.mapper.SxExamineLogMapper">


    <insert id="insertSxExamineLog"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `sx_examineLog`
        (
        <trim suffixOverrides=",">
                    <if test="id!=null">
                        `id`,
                    </if>
                    <if test="codeId!=null">
                        `code_id`,
                    </if>
                    <if test="type!=null">
                        `type`,
                    </if>
                    <if test="examineId!=null">
                        `examineId`,
                    </if>
                    <if test="resultType!=null">
                        `resultType`,
                    </if>
                    <if test="resultContent!=null">
                        `resultContent`,
                    </if>
                    <if test="createTime!=null">
                        `createTime`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="id!=null">
                    #{id},
                </if>
                <if test="codeId!=null">
                    #{codeId},
                </if>
                <if test="type!=null">
                    #{type},
                </if>
                <if test="examineId!=null">
                    #{examineId},
                </if>
                <if test="resultType!=null">
                    #{resultType},
                </if>
                <if test="resultContent!=null">
                    #{resultContent},
                </if>
                <if test="createTime!=null">
                    #{createTime},
                </if>
        </trim>
        )
    </insert>




    <update id="updateSxExamineLog">
        UPDATE `sx_examineLog`
        SET
        <trim suffixOverrides=",">
            <if test="codeId != null">
                `code_id` = #{codeId},
            </if>
            <if test="type != null">
                `type` = #{type},
            </if>
            <if test="examineId != null">
                `examineId` = #{examineId},
            </if>
            <if test="resultType != null">
                `resultType` = #{resultType},
            </if>
            <if test="resultContent != null and resultContent!=''">
                `resultContent` = #{resultContent},
            </if>
            <if test="createTime != null">
                `createTime` = #{createTime},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `id` = #{id} and
        </trim>
    </update>

    <update id="update">
        UPDATE `sx_examineLog`
        SET
        <trim suffixOverrides=",">
        <if test="set.codeId != null">
            `code_id` = #{set.codeId},
        </if>
        <if test="set.type != null">
            `type` = #{set.type},
        </if>
        <if test="set.examineId != null">
            `examineId` = #{set.examineId},
        </if>
        <if test="set.resultType != null">
            `resultType` = #{set.resultType},
        </if>
        <if test="set.resultContent != null and set.resultContent!=''">
            `resultContent` = #{set.resultContent},
        </if>
        <if test="set.createTime != null">
            `createTime` = #{set.createTime},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.idList != null">
                    `id` in
                    <foreach collection="where.idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.idSt !=null">
                `id` >= #{where.idSt} and
            </if>
            <if test="where.idEd!=null">
                `id` &lt;= #{where.idEd} and
            </if>
                <if test="where.codeIdList != null">
                    `code_id` in
                    <foreach collection="where.codeIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.codeIdSt !=null">
                `code_id` >= #{where.codeIdSt} and
            </if>
            <if test="where.codeIdEd!=null">
                `code_id` &lt;= #{where.codeIdEd} and
            </if>
                <if test="where.typeList != null">
                    `type` in
                    <foreach collection="where.typeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.typeSt !=null">
                `type` >= #{where.typeSt} and
            </if>
            <if test="where.typeEd!=null">
                `type` &lt;= #{where.typeEd} and
            </if>
                <if test="where.examineIdList != null">
                    `examineId` in
                    <foreach collection="where.examineIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.examineIdSt !=null">
                `examineId` >= #{where.examineIdSt} and
            </if>
            <if test="where.examineIdEd!=null">
                `examineId` &lt;= #{where.examineIdEd} and
            </if>
                <if test="where.resultTypeList != null">
                    `resultType` in
                    <foreach collection="where.resultTypeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.resultTypeSt !=null">
                `resultType` >= #{where.resultTypeSt} and
            </if>
            <if test="where.resultTypeEd!=null">
                `resultType` &lt;= #{where.resultTypeEd} and
            </if>
                <if test="where.resultContentList != null">
                    `resultContent` in
                    <foreach collection="where.resultContentList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyResultContent!=null and where.fuzzyResultContent.size()>0">
                (
                <foreach collection="where.fuzzyResultContent"  separator="or" item="item">
                    `ResultContent` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyResultContent!=null and where.rightFuzzyResultContent.size()>0">
                (
                <foreach collection="where.rightFuzzyResultContent"  separator="or" item="item">
                    `ResultContent` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.createTimeList != null">
                    `createTime` in
                    <foreach collection="where.createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createTimeSt !=null">
                `createTime` >= #{where.createTimeSt} and
            </if>
            <if test="where.createTimeEd!=null">
                `createTime` &lt;= #{where.createTimeEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.asset.examine.domain.SxExamineLog" id="SxExamineLogMap">
        <result property="id" column="id"/>
        <result property="codeId" column="code_id"/>
        <result property="type" column="type"/>
        <result property="examineId" column="examineId"/>
        <result property="resultType" column="resultType"/>
        <result property="resultContent" column="resultContent"/>
        <result property="createTime" column="createTime"/>
    </resultMap>


    <select id="querySxExamineLog" resultMap="SxExamineLogMap">
        select
        <include refid="baseResult"></include>
        from  `sx_examineLog`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="codeId != null">
                `code_id` = #{codeId} and
            </if>
            <if test="type != null">
                `type` = #{type} and
            </if>
            <if test="examineId != null">
                `examineId` = #{examineId} and
            </if>
            <if test="resultType != null">
                `resultType` = #{resultType} and
            </if>
            <if test="resultContent != null and resultContent!=''">
                `resultContent` = #{resultContent} and
            </if>
            <if test="createTime != null">
                `createTime` = #{createTime} and
            </if>
            <if test = "(_parameter instanceof com.asset.examine.domain.SxExamineLog$QueryBuilder) == true">
                <if test="idList != null">
                    `id` in
                    <foreach collection="idList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                <if test="codeIdList != null">
                    `code_id` in
                    <foreach collection="codeIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="codeIdSt !=null">
                    `code_id` >= #{codeIdSt} and
                </if>
                <if test="codeIdEd!=null">
                    `code_id` &lt;= #{codeIdEd} and
                </if>
                <if test="typeList != null">
                    `type` in
                    <foreach collection="typeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="typeSt !=null">
                    `type` >= #{typeSt} and
                </if>
                <if test="typeEd!=null">
                    `type` &lt;= #{typeEd} and
                </if>
                <if test="examineIdList != null">
                    `examineId` in
                    <foreach collection="examineIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="examineIdSt !=null">
                    `examineId` >= #{examineIdSt} and
                </if>
                <if test="examineIdEd!=null">
                    `examineId` &lt;= #{examineIdEd} and
                </if>
                <if test="resultTypeList != null">
                    `resultType` in
                    <foreach collection="resultTypeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="resultTypeSt !=null">
                    `resultType` >= #{resultTypeSt} and
                </if>
                <if test="resultTypeEd!=null">
                    `resultType` &lt;= #{resultTypeEd} and
                </if>
                <if test="resultContentList != null">
                    `resultContent` in
                    <foreach collection="resultContentList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyResultContent!=null and fuzzyResultContent.size()>0">
                    (
                    <foreach collection="fuzzyResultContent"  separator="or" item="item">
                        `ResultContent` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyResultContent!=null and rightFuzzyResultContent.size()>0">
                    (
                    <foreach collection="rightFuzzyResultContent"  separator="or" item="item">
                        `ResultContent` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="createTimeList != null">
                    `createTime` in
                    <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createTimeSt !=null">
                    `createTime` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `createTime` &lt;= #{createTimeEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="querySxExamineLogLimit1" resultMap="SxExamineLogMap">
        select
        <include refid="baseResult"></include>
        from  `sx_examineLog`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="id != null">
                `id` = #{id} and
            </if>
            <if test="codeId != null">
                `code_id` = #{codeId} and
            </if>
            <if test="type != null">
                `type` = #{type} and
            </if>
            <if test="examineId != null">
                `examineId` = #{examineId} and
            </if>
            <if test="resultType != null">
                `resultType` = #{resultType} and
            </if>
            <if test="resultContent != null and resultContent!=''">
                `resultContent` = #{resultContent} and
            </if>
            <if test="createTime != null">
                `createTime` = #{createTime} and
            </if>
            <if test = "(_parameter instanceof com.asset.examine.domain.SxExamineLog$QueryBuilder) == true">
                    <if test="idList != null">
                        `id` in
                        <foreach collection="idList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="idSt !=null">
                    `id` >= #{idSt} and
                </if>
                <if test="idEd!=null">
                    `id` &lt;= #{idEd} and
                </if>
                    <if test="codeIdList != null">
                        `code_id` in
                        <foreach collection="codeIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="codeIdSt !=null">
                    `code_id` >= #{codeIdSt} and
                </if>
                <if test="codeIdEd!=null">
                    `code_id` &lt;= #{codeIdEd} and
                </if>
                    <if test="typeList != null">
                        `type` in
                        <foreach collection="typeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="typeSt !=null">
                    `type` >= #{typeSt} and
                </if>
                <if test="typeEd!=null">
                    `type` &lt;= #{typeEd} and
                </if>
                    <if test="examineIdList != null">
                        `examineId` in
                        <foreach collection="examineIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="examineIdSt !=null">
                    `examineId` >= #{examineIdSt} and
                </if>
                <if test="examineIdEd!=null">
                    `examineId` &lt;= #{examineIdEd} and
                </if>
                    <if test="resultTypeList != null">
                        `resultType` in
                        <foreach collection="resultTypeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="resultTypeSt !=null">
                    `resultType` >= #{resultTypeSt} and
                </if>
                <if test="resultTypeEd!=null">
                    `resultType` &lt;= #{resultTypeEd} and
                </if>
                    <if test="resultContentList != null">
                        `resultContent` in
                        <foreach collection="resultContentList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyResultContent!=null and fuzzyResultContent.size()>0">
                    (
                    <foreach collection="fuzzyResultContent"  separator="or" item="item">
                        `ResultContent` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyResultContent!=null and rightFuzzyResultContent.size()>0">
                    (
                    <foreach collection="rightFuzzyResultContent"  separator="or" item="item">
                        `ResultContent` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="createTimeList != null">
                        `createTime` in
                        <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createTimeSt !=null">
                    `createTime` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `createTime` &lt;= #{createTimeEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `id`,
        `code_id`,
        `type`,
        `examineId`,
        `resultType`,
        `resultContent`,
        `createTime`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.asset.examine.domain.SxExamineLog$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.id==true">
                        `id`,
                    </if>
                    <if test="fetchFields.fetchFields.codeId==true">
                        `code_id`,
                    </if>
                    <if test="fetchFields.fetchFields.type==true">
                        `type`,
                    </if>
                    <if test="fetchFields.fetchFields.examineId==true">
                        `examineId`,
                    </if>
                    <if test="fetchFields.fetchFields.resultType==true">
                        `resultType`,
                    </if>
                    <if test="fetchFields.fetchFields.resultContent==true">
                        `resultContent`,
                    </if>
                    <if test="fetchFields.fetchFields.createTime==true">
                        `createTime`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.id==null">
                        `id`,
                    </if>
                    <if test="fetchFields.excludeFields.codeId==null">
                        `code_id`,
                    </if>
                    <if test="fetchFields.excludeFields.type==null">
                        `type`,
                    </if>
                    <if test="fetchFields.excludeFields.examineId==null">
                        `examineId`,
                    </if>
                    <if test="fetchFields.excludeFields.resultType==null">
                        `resultType`,
                    </if>
                    <if test="fetchFields.excludeFields.resultContent==null">
                        `resultContent`,
                    </if>
                    <if test="fetchFields.excludeFields.createTime==null">
                        `createTime`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.asset.examine.domain.SxExamineLog$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>

    <select id="querySxExamineLogList" resultType="java.util.Map">
        SELECT
            r.name,r.registerType,r.registerCreateTime,r.openid,r.appid,
            e.`type`,e.resultType,e.resultContent,createTime,e.examineId,
            u.nick_name
        FROM sx_examineLog e
                 LEFT JOIN sx_register r on e.code_id=r.id
                 LEFT JOIN sys_user u on u.user_id=e.examineid
        where r.id=#{id} and e.type=#{type}
    </select>

</mapper>