# ===================================
#  springboot配置文件
# ===================================
spring.application.name=asset-wechat-api
server.port=10088
server.servlet.context-path:/wx-api
spring.main.allow-bean-definition-overriding=true
#logging.level.root:warn
#logging.level.com.zaxxer.hikari:trace

# ===================================
#  druid配置文件
# ===================================
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/asset-admin?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=zhangxiangyu
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=30000
spring.datasource.validationQuery=select 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,slf4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
spring.datasource.useGlobalDataSourceStat=true
#配置监控页面访问登录名称
spring.datasource.druid.stat-view-servlet.login-username=admin
#配置监控页面访问密码
spring.datasource.druid.stat-view-servlet.login-password=admin
#是否开启慢sql查询监控
spring.datasource.druid.filter.stat.log-slow-sql=true
#慢SQL执行时间
spring.datasource.druid.filter.stat.slow-sql-millis=1
#mapper.xml文件放置的位置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.asset.wechat

# ===================================
#  kafka配置文件
# ===================================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=topic_messages
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.listener.concurrency=3
spring.kafka.properties.linger.ms=1
#=============== producer  =======================
spring.kafka.producer.client-id=${spring.application.name}
# 写入失败时，重试次数。当leader节点失效，一个repli节点会替代成为leader节点，此时可能出现写入失败，
# 当retris为0时，produce不会重复。retirs重发，此时repli节点完全成为leader节点，不会产生消息丢失。
spring.kafka.producer.retries=0
# 每次批量发送消息的数量,produce积累到一定数据，一次发送
spring.kafka.producer.batch-size=16384
# produce积累数据一次发送，缓存大小达到buffer.memory就发送数据
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#request.required.acks有三个值 0 1 -1
#0:生产者不会等待broker的ack，这个延迟最低但是存储的保证最弱当server挂掉的时候就会丢数据
#1：服务端会等待ack值 leader副本确认接收到消息后发送ack但是如果leader挂掉后他不确保是否复制完成新leader也会导致数据丢失
#-1：同样在1的基础上 服务端会等所有的follower的副本受到数据后才会受到leader发出的ack，这样数据不会丢
spring.kafka.producer.acks=-1


# ===================================
#  redis配置文件
# ===================================
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.timeout=10000ms
spring.redis.password=
spring.redis.lettuce.pool.max-active=10
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-idle=10
spring.redis.lettuce.pool.max-wait=30000ms

spring.security.basic.enabled: true
spring.security.basic.path: /swagger-ui.html
spring.security.user.name: admin
spring.security.user.password: admin

swagger.enabled: true
swagger.pathMapping: /wx-api

# ===================================
# 小程序推送模版
# 莫言：AppID(小程序ID)：wx93a8bae4739f77a1 AppSecret(小程序密钥) ：13f66bd4438cc85e6de0c493109c80a9
# ===================================
spring.template.url=https://api.weixin.qq.com/cgi-bin/message/subscribe/send?access_token=
spring.template.id=jDkVY0bUUEIbAdeLwBY1XBG81wjKfnSpwoXHrt09N-U

#spring.template.appid=wx7c54942dfc87f4d8
#spring.template.appsecret=5873a729c365b65ab42bb5fc82d2ed49

spring.template.appid=wx387f2dd400f31535
spring.template.appsecret=d2aa250bdf9c2b75ee265076070ff5d7

#spring.template.appid=wx93a8bae4739f77a1
#spring.template.appsecret=13f66bd4438cc85e6de0c493109c80a9

spring.template.path=pages/index/index

# ===================================
# 小程序服务端请求地址
# ===================================
spring.url.jscode2session=https://api.weixin.qq.com/sns/jscode2session?appid=APPID&secret=SECRET&js_code=JSCODE&grant_type=authorization_code



# ===================================
# 短信密码
# ===================================
code.host=http://yzx.market.alicloudapi.com
code.path=/yzx/sendSms
code.appcode=5f090a89f7c5443ab982e616500b2b69
code.tpl_id=TP1710262


# ===================================
# 实名认证
# ===================================
market.host=https://zid.market.alicloudapi.com
market.path=/idcard/VerifyIdcardv2


# ===================================
# 文上传
# ===================================
spring.servlet.multipart.max-file-size =10MB
spring.servlet.multipart.max-request-size=100MB
secret.discern.file= /Users/personal/Documents/sx-asset/file/

